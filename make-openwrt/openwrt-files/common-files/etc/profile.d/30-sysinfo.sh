#!/bin/bash
# DO NOT EDIT THIS FILE but add config options to /etc/default/motd
# any changes will be lost on board support package update

# define system variables
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
THIS_SCRIPT="sysinfo"
MOTD_DISABLE=""
SHOW_IP_PATTERN="^[ewr].*|^br.*|^lt.*|^umts.*"

[[ -f "/etc/default/motd" ]] && . /etc/default/motd
[[ -n "${MOTD_DISABLE}" ]] && {
	for f in "${MOTD_DISABLE}"; do
		[[ "${f}" == "${THIS_SCRIPT}" ]] && exit 0
	done
}

# find the partition where root is located
ROOT_PTNAME="$(df -h /boot | tail -n1 | awk '{print $1}' | awk -F '/' '{print $3}')"
if [[ -n "${ROOT_PTNAME}" ]]; then
	# find the disk where the partition is located, only supports mmcblk?p? sd?? hd?? vd?? and other formats
	case "${ROOT_PTNAME}" in
	mmcblk?p[1-4])
		DISK_NAME="${ROOT_PTNAME:0:-2}"
		PARTITION_NAME="p"
		;;
	[hsv]d[a-z][1-4])
		DISK_NAME="${ROOT_PTNAME:0:-1}"
		PARTITION_NAME=""
		;;
	nvme?n?p[1-4])
		DISK_NAME="${ROOT_PTNAME:0:-2}"
		PARTITION_NAME="p"
		;;
	*)
		echo "Unable to recognize the disk type of ${ROOT_PTNAME}!"
		;;
	esac
	PARTITION_PATH="/mnt/${DISK_NAME}${PARTITION_NAME}4"
fi

# don't edit below here
function display() {
	# $1=name $2=value $3=red_limit $4=minimal_show_limit $5=unit $6=after $7=acs/desc{
	# battery red color is opposite, lower number
	if [[ "${1}" == "Battery" ]]; then
		local great="<"
	else
		local great=">"
	fi

	if [[ -n "${2}" && "${2}" > "0" && (("${2%.*}" -ge "${4}")) ]]; then
		printf "%-5s%s" "${1}:"
		if awk "BEGIN{exit ! (${2} $great ${3})}"; then
			echo -ne "\e[0;91m ${2}"
		else
			echo -ne "\e[0;92m ${2}"
		fi
		printf "%-1s%s\x1B[0m" "${5}"
		printf "%-9s%s\t" "${6}"
		return 1
	else
		printf "%-5s%s" "${1}:"
		echo -ne "\e[0;92m ${2}"
		printf "%-1s%s\x1B[0m" "${5}"
		printf "%-9s%s\t" "${6}"
		return 1
	fi
} # display

function get_ip_addresses() {
	local ips=()
	for f in /sys/class/net/*; do
		local intf=$(basename ${f})
		# match only interface names starting with e (Ethernet), br (bridge), w (wireless), r (some Ralink drivers use ra<number> format)
		if [[ ${intf} =~ ${SHOW_IP_PATTERN} ]]; then
			local tmp=$(ip -4 addr show dev ${intf} | awk '/inet/ {print $2}' | cut -d'/' -f1)
			# add both name and IP - can be informative but becomes ugly with long persistent/predictable device names
			#[[ -n $tmp ]] && ips+=("$intf: $tmp")
			# add IP only
			[[ -n "${tmp}" ]] && ips+=("${tmp}")
		fi
	done
	echo "${ips[@]}"
} # get_ip_addresses



# query various systems and send some stuff to the background for overall faster execution.
# Works only with ambienttemp and batteryinfo since A20 is slow enough :)
ip_address="$(get_ip_addresses &)"

# display info
machine_model=$("s905x | JOE-WRT" | tr -d "\000")
printf "Device Model: \x1B[93m%s\x1B[0m" "${machine_model}"
echo ""
printf "Architecture: \x1B[93m%s\x1B[0m" "STB HG680P"

echo ""
	printf "IP Addr: \x1B[92m%s\x1B[0m" "${ip_address}"
echo ""

echo "───────────────────────────────────────────────────────────────────────"
